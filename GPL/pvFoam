#!/bin/sh
#
#    This file is part of vtkPOpenFOAMReader.
#
#    vtkPOpenFOAMReader is free software: you can redistribute it
#    and/or modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation, either version 3 of
#    the License, or (at your option) any later version.
#
#    vtkPOpenFOAMReader is distributed in the hope that it will be
#    useful, but WITHOUT ANY WARRANTY; without even the implied
#    warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#    See the GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with vtkPOpenFOAMReader.  If not, see
#    <http://www.gnu.org/licenses/>.
#
# Copyright (c) 2008-2009 Takuya OSHIMA <oshima@eng.niigata-u.ac.jp>.
# All rights reserved.
#
# Script
#     pvFoam
#
# Description
#     ParaView interface script for use with vtkPOpenFOAMReader.

# Adjust as necessary.
# You might also want to set LD_LIBRARY_PATH or DYLD_LIBRARY_PATH.
#paraviewPath=/opt/ParaView3/bin/paraview.app/Contents/MacOS/paraview
paraviewPath="`which paraview`"; pvPathLineNo=${LINENO}

if [ ! -x "${paraviewPath}" -o -d "${paraviewPath}" ]; then
    echo "ParaView not found; set paraviewPath at line ${pvPathLineNo} of $0."
    exit 1
fi

ext=foam
casePath=.
script=${0##*/}

while [ $# -gt 0 ]
do
    case "$1" in
	-case)
	    if [ $# -lt 2 ]; then
		echo "-case requires path specification"
		exit 1
	    fi
	    shift
	    casePath="$1"
	    ;;
	-clientServer|-cs)
	    if [ $# -lt 2 ]; then
		echo "-clientServer or -cs requires specification of the server resource name"
		exit 1
	    fi
	    shift
	    csResourceName="$1"
	    ;;
	-help)
	    echo "Usage: ${script} [-case <dir>] [-clientServer|-cs <server resource name>] [-help]"
	    exit 0
	    ;;
    esac
    shift
done

# cd to the case directory
if ! cd "${casePath}" > /dev/null 2>&1; then
    echo "Cannot change directory to \"${casePath}\"; exiting"
    exit 1
fi

caseName="${PWD##*/}"

# see if caseName starts with controlDict or the case is in the root directory.
if [ "${caseName#controlDict}" != "${caseName}" -o ! "${caseName}" ]; then
    # Use case.foam as file name given to ParaView
    caseName="case"
fi

fileName="${caseName}.${ext}"
if [ -e "${fileName}" ]; then
    if [ ! -r "${fileName}" ]; then
	echo "Stub ${fileName} exists but not readable; exiting"
	exit 1
    fi
else
    trap "rm -f \"${fileName}\" > /dev/null 2>&1; exit 0" EXIT TERM INT QUIT
    if ! touch "${fileName}" > /dev/null 2>&1; then
	echo "Cannot create stub ${fileName}; exiting"
	exit 1
    fi
fi

# set the locale where ParaView is run under to "C" so that the
# interpretation of decimal points by the system routines are not
# affected
export LANG=C

# specify fileName with full path so that it can easily be accessed
# later with File->Recent Files
if [ "${csResourceName}" ]; then
    "${paraviewPath}" --data="${PWD}/${fileName}" --server="${csResourceName}"
else
    "${paraviewPath}" --data="${PWD}/${fileName}"
fi

#------------------------------------------------------------------------------

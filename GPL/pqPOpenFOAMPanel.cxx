/*=========================================================================

    This file is part of vtkPOpenFOAMReader.

    vtkPOpenFOAMReader is free software: you can redistribute it
    and/or modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    vtkPOpenFOAMReader is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied
    warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with vtkPOpenFOAMReader.  If not, see
    <http://www.gnu.org/licenses/>.

=========================================================================*/
// Copyright (c) 2008-2009 Takuya OSHIMA <oshima@eng.niigata-u.ac.jp>.
// All rights reserved.

#include "pqPOpenFOAMPanel.h"

// Qt
#include <QLayout>
#include <QPushButton>

// server manager
#include "vtkSMProperty.h"
#include "vtkSMProxyIterator.h"
#include "vtkSMSourceProxy.h"
#include "vtkSMViewProxy.h"

//-----------------------------------------------------------------------------
pqPOpenFOAMPanel::pqPOpenFOAMPanel(pqProxy *pxy, QWidget *p)
  : pqAutoGeneratedObjectPanel(pxy, p)
{
  // create refresh button
  QPushButton *refresh = new QPushButton("Refresh", this);
  refresh->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);

  // place the button at top-right of the layout grid
  this->PanelLayout->addWidget(refresh, 0, 1, Qt::AlignRight);
  QObject::connect(refresh, SIGNAL(clicked()), this, SLOT(onRefresh()));
  vtkSMSourceProxy::SafeDownCast(this->proxy())->GetProperty("Refresh")
    ->SetImmediateUpdate(1);
}

//-----------------------------------------------------------------------------
void pqPOpenFOAMPanel::onRefresh()
{
  vtkSMSourceProxy *sp = vtkSMSourceProxy::SafeDownCast(this->proxy());

  // force updating everything (RequestInformation() + RequestData())
  sp->GetProperty("Refresh")->Modified();
  sp->UpdatePipeline();

  // still render all views (not only 3D views but also e.g. xy plots)
  vtkSMProxyIterator *pIt = vtkSMProxyIterator::New();
  pIt->SetModeToOneGroup();
  for(pIt->Begin("views"); !pIt->IsAtEnd(); pIt->Next())
    {
    vtkSMViewProxy::SafeDownCast(pIt->GetProxy())->StillRender();
    }
  pIt->Delete();
}
